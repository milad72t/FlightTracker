# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Flight.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='Flight.proto',
  package='FlightTracker',
  syntax='proto3',
  serialized_pb=_b('\n\x0c\x46light.proto\x12\rFlightTracker\"\x81\x01\n\x06\x46light\x12\x10\n\x08\x66lightId\x18\x01 \x01(\x05\x12\x10\n\x08\x61ltitude\x18\x02 \x01(\x05\x12\r\n\x05speed\x18\x03 \x01(\x05\x12\r\n\x05\x61ngle\x18\x04 \x01(\x01\x12\x10\n\x08sendTime\x18\x05 \x01(\t\x12\x11\n\tlongitude\x18\x06 \x01(\x01\x12\x10\n\x08latitude\x18\x07 \x01(\x01\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_FLIGHT = _descriptor.Descriptor(
  name='Flight',
  full_name='FlightTracker.Flight',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='flightId', full_name='FlightTracker.Flight.flightId', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='altitude', full_name='FlightTracker.Flight.altitude', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='speed', full_name='FlightTracker.Flight.speed', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='angle', full_name='FlightTracker.Flight.angle', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sendTime', full_name='FlightTracker.Flight.sendTime', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='longitude', full_name='FlightTracker.Flight.longitude', index=5,
      number=6, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='latitude', full_name='FlightTracker.Flight.latitude', index=6,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=32,
  serialized_end=161,
)

DESCRIPTOR.message_types_by_name['Flight'] = _FLIGHT

Flight = _reflection.GeneratedProtocolMessageType('Flight', (_message.Message,), dict(
  DESCRIPTOR = _FLIGHT,
  __module__ = 'Flight_pb2'
  # @@protoc_insertion_point(class_scope:FlightTracker.Flight)
  ))
_sym_db.RegisterMessage(Flight)


# @@protoc_insertion_point(module_scope)
